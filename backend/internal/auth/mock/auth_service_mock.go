// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/auth/service.go

// Package mock_auth is a generated GoMock package.
package mock_auth

import (
	context "context"
	reflect "reflect"

	dto "github.com/florentinuskev/simple-todo/internal/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockAuthService is a mock of AuthService interface.
type MockAuthService struct {
	ctrl     *gomock.Controller
	recorder *MockAuthServiceMockRecorder
}

// MockAuthServiceMockRecorder is the mock recorder for MockAuthService.
type MockAuthServiceMockRecorder struct {
	mock *MockAuthService
}

// NewMockAuthService creates a new mock instance.
func NewMockAuthService(ctrl *gomock.Controller) *MockAuthService {
	mock := &MockAuthService{ctrl: ctrl}
	mock.recorder = &MockAuthServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthService) EXPECT() *MockAuthServiceMockRecorder {
	return m.recorder
}

// UserLogin mocks base method.
func (m *MockAuthService) UserLogin(c context.Context, userReq *dto.UserLoginReq) (*dto.UserLoginRes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UserLogin", c, userReq)
	ret0, _ := ret[0].(*dto.UserLoginRes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UserLogin indicates an expected call of UserLogin.
func (mr *MockAuthServiceMockRecorder) UserLogin(c, userReq interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UserLogin", reflect.TypeOf((*MockAuthService)(nil).UserLogin), c, userReq)
}

// UserRegister mocks base method.
func (m *MockAuthService) UserRegister(c context.Context, userReq *dto.UserRegisterReq) (*dto.UserRegisterRes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UserRegister", c, userReq)
	ret0, _ := ret[0].(*dto.UserRegisterRes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UserRegister indicates an expected call of UserRegister.
func (mr *MockAuthServiceMockRecorder) UserRegister(c, userReq interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UserRegister", reflect.TypeOf((*MockAuthService)(nil).UserRegister), c, userReq)
}
